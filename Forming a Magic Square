#include <bits/stdc++.h>

using namespace std;

// Complete the formingMagicSquare function below.
int formingMagicSquare(vector<vector<int>> input) {
     int diff[8] = { 0,0,0,0,0,0,0,0 };
    std::vector<std::vector<int>> ref1 = { { 8,3,4 },
                                           { 1,5,9 },
                                           { 6,7,2 } };
    std::vector<std::vector<int>> ref2 = { { 4,3,8 },
                                           { 9,5,1 },
                                           { 2,7,6 } };
    std::vector<std::vector<int>> ref3 = { { 6,7,2 },
                                           { 1,5,9 },
                                           { 8,3,4 } };
    std::vector<std::vector<int>> ref4 = { { 2,7,6 },
                                           { 9,5,1 },
                                           { 4,3,8 } };
    std::vector<std::vector<int>> ref5 = { { 8,1,6 },
                                           { 3,5,7 },
                                           { 4,9,2 } };
    std::vector<std::vector<int>> ref6 = { { 6,1,8 },
                                           { 7,5,3 },
                                           { 2,9,4 } };
    std::vector<std::vector<int>> ref7 = { { 4,9,2 },
                                           { 3,5,7 },
                                           { 8,1,6 } };
    std::vector<std::vector<int>> ref8 = { { 2,9,4 },
                                           { 7,5,3 },
                                           { 6,1,8 } };
    for (int loop_r = 0; loop_r < 3; loop_r++) {
        for (int loop_c = 0; loop_c < 3; loop_c++) {
            diff[0] += abs(ref1[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[1] += abs(ref2[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[2] += abs(ref3[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[3] += abs(ref4[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[4] += abs(ref5[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[5] += abs(ref6[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[6] += abs(ref7[loop_r][loop_c] - input[loop_r][loop_c]);
            diff[7] += abs(ref8[loop_r][loop_c] - input[loop_r][loop_c]);
        }
    }

    int result = diff[0];
    for (int loop = 1; loop < 8; loop++) {
        if (diff[loop] < result) {
            result = diff[loop];
        }
    }
    return result;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> s(3);
    for (int i = 0; i < 3; i++) {
        s[i].resize(3);

        for (int j = 0; j < 3; j++) {
            cin >> s[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = formingMagicSquare(s);

    fout << result << "\n";

    fout.close();

    return 0;
}
